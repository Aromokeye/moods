{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\components\\\\Person.js\",\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\components\\\\Personlist.js\",\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\components\\\\Scroll.js\",\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\components\\\\Searchbox.js\",\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\container\\\\App.js\",\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Niyi\\\\Desktop\\\\PRACTICE\\\\hackernews\\\\src\\\\index.js\"],\"names\":[\"Person\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"src\",\"concat\",\"id\",\"alt\",\"name\",\"email\",\"street1\",\"street2\",\"street3\",\"Personlist\",\"_ref\",\"people\",\"list\",\"map\",\"user\",\"i\",\"components_Person\",\"key\",\"address\",\"street\",\"suite\",\"city\",\"Scroll\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"Searchbox\",\"type\",\"placeholder\",\"onChange\",\"searchChange\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"searchField\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this3\",\"filteredPeople\",\"filter\",\"toLowerCase\",\"includes\",\"components_Searchbox\",\"components_Scroll\",\"components_Personlist\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"container_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\n\\r\\nconst Person=(props)=>{\\r\\n    return(\\r\\n        <div className='w-100'>\\r\\n            <div className=' shadow-2 ba bw2 truncate fl grow br3 w-50 w-third-m w-20-l gold bg-dark-gray b--near-white' >\\r\\n                <img src= {`https://api.adorable.io/avatars/200/${props.id}.png`} alt='every-day people' \\r\\n                    className=' db w-100 f4'/>\\r\\n             <span className=' db tc w-100 f6'>\\r\\n                <h1 className=' db tc w-100 f6'>{props.name}</h1>\\r\\n                <p className=' db tc w-100 f6'>{props.email}</p>\\r\\n                \\r\\n                    <p>{props.street1}<br/>{props.street2}<br/>{props.street3}</p>\\r\\n            </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default Person  \",\"import React from 'react';\\r\\nimport Person from './Person'\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nconst Personlist = ({people})=>{\\r\\n     const list = people.map((user,i)=>{\\r\\n    return (\\r\\n    \\r\\n    <Person \\r\\n     key={i}\\r\\n    id={people[i].id}          \\r\\n    name={people[i].name} \\r\\n     email={people[i].email}\\r\\n        street1={people[i].address.street}\\r\\n        street2={people[i].address.suite}\\r\\n        street3={people[i].address.city}\\r\\n     />\\r\\n )\\r\\n})\\r\\n    return (\\r\\n        <div>\\r\\n           {list} \\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default Personlist\",\"import React from 'react';\\r\\n\\r\\nconst Scroll=(props)=>{\\r\\n    return  (<div style={{overflowY:'scroll', border:'5px solid pink', height: '400px'}}>\\r\\n                {props.children}\\r\\n            </div>)\\r\\n}\\r\\n\\r\\nexport default Scroll;\",\"import React from 'react';\\r\\n\\r\\nconst Searchbox=(props)=>{\\r\\n    return (\\r\\n        <div className='mb2'>\\r\\n            <input \\r\\n            className='ph5 pv3 ba b--dark-pink bg-light-pink br2 fw6 athelas' \\r\\n            type='search' \\r\\n            placeholder='Find face'\\r\\n            onChange={props.searchChange}\\r\\n            />\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default Searchbox;\",\"import React, {Component} from 'react';\\nimport Personlist from '../components/Personlist'\\nimport Scroll from '../components/Scroll'\\nimport Searchbox from '../components/Searchbox'\\n//import {people} from './People'\\n\\n\\nclass App extends Component {\\n    constructor(){\\n        super()\\n        this.state={\\n            people: [],\\n            searchField:''\\n        }\\n    }\\n\\n    componentDidMount(){\\n        fetch('https://jsonplaceholder.typicode.com/users')\\n        .then(response=>response.json())\\n        .then(users=>this.setState({people:users}))\\n    }   \\n    onSearchChange=(event)=>{\\n       this.setState({searchField:event.target.value})\\n      \\n    }\\n    render(){\\n        const filteredPeople=this.state.people.filter(people=>{\\n            return people.name.toLowerCase().includes(this.state.searchField.toLowerCase());\\n            \\n        })\\n        return (\\n            <div className='tc'>\\n                <div>\\n                    <h1 className=' georgia f2'>Passionate Moods</h1>\\n                </div>\\n                \\n                <Searchbox searchChange={this.onSearchChange}/>\\n                <Scroll>\\n                    <Personlist people={filteredPeople}/>\\n                </Scroll>\\n            </div>\\n    )\\n}\\n    \\n}\\n\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './container/App';\\nimport './index.css'\\n\\n\\n\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\n\\nReactDOM.render(<App/>, document.getElementById('root'));\\n\\nif (module.hot) {\\n    module.hot.accept();\\n    }\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},16:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),c=a(2),l=a.n(c),s=a(3),o=a(4),i=a(6),m=a(5),d=a(7),u=function(e){return r.a.createElement(\"div\",{className:\"w-100\"},r.a.createElement(\"div\",{className:\" shadow-2 ba bw2 truncate fl grow br3 w-50 w-third-m w-20-l gold bg-dark-gray b--near-white\"},r.a.createElement(\"img\",{src:\"https://api.adorable.io/avatars/200/\".concat(e.id,\".png\"),alt:\"every-day people\",className:\" db w-100 f4\"}),r.a.createElement(\"span\",{className:\" db tc w-100 f6\"},r.a.createElement(\"h1\",{className:\" db tc w-100 f6\"},e.name),r.a.createElement(\"p\",{className:\" db tc w-100 f6\"},e.email),r.a.createElement(\"p\",null,e.street1,r.a.createElement(\"br\",null),e.street2,r.a.createElement(\"br\",null),e.street3))))},h=function(e){var t=e.people,a=t.map(function(e,a){return r.a.createElement(u,{key:a,id:t[a].id,name:t[a].name,email:t[a].email,street1:t[a].address.street,street2:t[a].address.suite,street3:t[a].address.city})});return r.a.createElement(\"div\",null,a)},p=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"5px solid pink\",height:\"400px\"}},e.children)},f=function(e){return r.a.createElement(\"div\",{className:\"mb2\"},r.a.createElement(\"input\",{className:\"ph5 pv3 ba b--dark-pink bg-light-pink br2 fw6 athelas\",type:\"search\",placeholder:\"Find face\",onChange:e.searchChange}))},w=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(i.a)(this,Object(m.a)(t).call(this))).onSearchChange=function(t){e.setState({searchField:t.target.value})},e.state={people:[],searchField:\"\"},e}return Object(d.a)(t,e),Object(o.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({people:t})})}},{key:\"render\",value:function(){var e=this,t=this.state.people.filter(function(t){return t.name.toLowerCase().includes(e.state.searchField.toLowerCase())});return r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"div\",null,r.a.createElement(\"h1\",{className:\" georgia f2\"},\"Passionate Moods\")),r.a.createElement(f,{searchChange:this.onSearchChange}),r.a.createElement(p,null,r.a.createElement(h,{people:t})))}}]),t}(n.Component);a(14),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(15);l.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,a){e.exports=a(16)}},[[8,1,2]]]);","extractedComments":[]}